AWSTemplateFormatVersion: '2010-09-09'
Description: >
  VPC, Subnets, Security Group, ECS Cluster, Task Definition,
  Fargate Service, and ALB with Target Group and Listener.
  Parameterized to update container image via CloudFormation.
  Uses pre-existing ECR repository and LabRole as ECS execution role.

Parameters:
  ImageUri:
    Type: String
    Description: Full URI of the container image (e.g., 384191713250.dkr.ecr.us-east-1.amazonaws.com/my-repo:latest)

Resources:

  # --------------------------
  # Networking
  # --------------------------
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: LabVPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: LabIGW

  AttachIGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: LabPublicRouteTable

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachIGW
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs 'us-east-1']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: LabPublicSubnet1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [1, !GetAZs 'us-east-1']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: LabPublicSubnet2

  PublicSubnet1RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  # --------------------------
  # Security Groups
  # --------------------------
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP inbound to ALB
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  ECSServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow inbound from ALB to ECS tasks
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref ALBSecurityGroup

  # --------------------------
  # ALB + Target Group + Listener
  # --------------------------
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: LabALB
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'
      Type: application

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: LabECSTargetGroup
      Port: 80
      Protocol: HTTP
      TargetType: ip
      VpcId: !Ref VPC
      HealthCheckPath: /
      HealthCheckIntervalSeconds: 30
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  # --------------------------
  # ECS Cluster + Task Definition + Service
  # --------------------------
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: LabFargateCluster

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: LabSampleTask
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: arn:aws:iam::384191713250:role/LabRole
      ContainerDefinitions:
        - Name: sample-container
          Image: !Ref ImageUri
          Essential: true
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp

  FargateService:
    Type: AWS::ECS::Service
    DependsOn: ALBListener
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: LabFargateService
      TaskDefinition: !Ref TaskDefinition
      LaunchType: FARGATE
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref PublicSubnet1
            - !Ref PublicSubnet2
          SecurityGroups:
            - !Ref ECSServiceSecurityGroup
      LoadBalancers:
        - TargetGroupArn: !Ref TargetGroup
          ContainerName: sample-container
          ContainerPort: 80

Outputs:
  VPCId:
    Description: VPC Id created
    Value: !Ref VPC

  PublicSubnet1Id:
    Description: Public Subnet 1 Id
    Value: !Ref PublicSubnet1

  PublicSubnet2Id:
    Description: Public Subnet 2 Id
    Value: !Ref PublicSubnet2

  ECSClusterName:
    Description: ECS Cluster Name
    Value: !Ref ECSCluster

  FargateServiceName:
    Description: ECS Fargate Service Name
    Value: !Ref FargateService

  ALBEndpoint:
    Description: ALB DNS endpoint
    Value: !GetAtt ALB.DNSName
