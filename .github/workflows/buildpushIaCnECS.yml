name: Build, Push, and CFN Deploy ECS

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  CF_STACK_NAME: my-ecs-env
  CF_TEMPLATE_PATH: infrastructure/IaCfor.yaml
  ECR_REPOSITORY_NAME: asyiqan/np-snatch
  IMAGE_NAME: asyiqan/np-snatch

permissions:
  contents: read

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Ensure ECR repository exists
        run: |
          if ! aws ecr describe-repositories --repository-names "${ECR_REPOSITORY_NAME}" --region "${AWS_REGION}" >/dev/null 2>&1; then
            echo "Creating ECR repository ${ECR_REPOSITORY_NAME}..."
            aws ecr create-repository --repository-name "${ECR_REPOSITORY_NAME}" --region "${AWS_REGION}"
          else
            echo "ECR repository ${ECR_REPOSITORY_NAME} already exists."
          fi

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker images
        id: build-images
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          ECR_IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY_NAME:$IMAGE_TAG

          echo "Building image..."
          docker build -f dockerfile/Dockerfile -t $IMAGE_NAME:latest .
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
          docker tag $IMAGE_NAME:latest $ECR_IMAGE_URI

          echo "Pushing to Docker Hub..."
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$IMAGE_TAG

          echo "Pushing to ECR..."
          docker push $ECR_IMAGE_URI

          echo "image_uri=$ECR_IMAGE_URI" >> $GITHUB_OUTPUT

      - name: Deploy CloudFormation stack with new image
        run: |
          aws cloudformation deploy \
            --template-file "${CF_TEMPLATE_PATH}" \
            --stack-name "${CF_STACK_NAME}" \
            --capabilities CAPABILITY_NAMED_IAM CAPABILITY_IAM \
            --parameter-overrides ImageUri=${{ steps.build-images.outputs.image_uri }} \
            --region "${AWS_REGION}" \
            --no-fail-on-empty-changeset
